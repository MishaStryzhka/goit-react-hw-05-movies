{"version":3,"file":"static/js/544.b08f254b.chunk.js","mappings":"kLACA,EAAuB,yB,SCkBvB,EAdmB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC9B,OACI,+BACI,wBACKD,EAAWE,QAAUF,EAAWG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACjC,eAAaC,UAAWC,EAAxB,UACI,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMV,GAA1C,SAAuDG,KADlDC,EADwB,OAQpD,C,oICuBD,UA9Ba,WACT,OAAoDO,EAAAA,EAAAA,UAAS,IAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACMb,GAAWc,EAAAA,EAAAA,MAmBjB,OAlBAC,QAAQC,IAAIJ,IAEZK,EAAAA,EAAAA,YAAU,WAAM,wCACZ,6GAE8BC,EAAAA,EAAAA,sBAF9B,OAEcC,EAFd,OAIQN,EAAsBM,GAJ9B,gDAMQC,IAAAA,OAAAA,QAAwB,KAAMC,SANtC,sGADY,uBAAC,WAAD,wBAaZF,EACH,GAAE,KAGC,qBAASd,UAAU,UAAnB,WACI,4CAEA,SAAC,IAAD,CAAYN,WAAYa,EAAoBZ,SAAUA,MAGjE,C,8FCpCKsB,EAAU,mCAEVC,EAAmB,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,kEAAqEF,IADpE,WAClBG,EADkB,QAEVC,KAAKC,QAFK,yCAGbC,QAAQC,OAAO,IAAIC,MAAM,+CAHZ,gCAKjBL,EAASC,KAAKC,SALG,2CAAH,qDAQnBI,EAAc,mCAAG,WAAO3B,GAAP,uFACIoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,oBAA8DkB,EAA9D,oBADJ,WACbG,EADa,QAGLC,KAHK,yCAIRE,QAAQC,OAAO,IAAIC,MAAM,+CAJjB,gCAMZL,EAASC,MANG,2CAAH,sDASdM,EAAe,mCAAG,WAAOC,GAAP,uFACGT,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,iCAA+FW,EAA/F,gCADH,WACdR,EADc,QAGNC,KAHM,yCAITE,QAAQC,OAAO,IAAIC,MAAM,+CAJhB,gCAMbL,EAASC,MANI,2CAAH,sDASfQ,EAAS,mCAAG,WAAO9B,GAAP,uFACSoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,4BAAsEkB,EAAtE,oBADT,WACRG,EADQ,QAGAC,KAHA,yCAIHE,QAAQC,OAAO,IAAIC,MAAM,+CAJtB,gCAMPL,EAASC,MANF,2CAAH,sDASTS,EAAY,mCAAG,WAAO/B,GAAP,uFACMoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,4BAAsEkB,EAAtE,oBADN,WACXG,EADW,QAGHC,KAHG,yCAINE,QAAQC,OAAO,IAAIC,MAAM,+CAJnB,gCAMVL,EAASC,MANC,2CAAH,sDASLR,EAAM,CAAEK,oBAAAA,EAAqBQ,eAAAA,EAAgBC,gBAAAA,EAAiBE,UAAAA,EAAWC,aAAAA,E","sources":["webpack://react-homework-template/./src/components/ListMovies/ListMovies.module.css?08bb","components/ListMovies/ListMovies.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ListMovies_item__lLotJ\"};","import { Link } from \"react-router-dom\";\nimport css from \"./ListMovies.module.css\";\nimport PropTypes from 'prop-types';\n\n\nconst ListMovies = ({ listMovies, location }) => {\n    return (\n        <>\n            <ul>\n                {listMovies.length && listMovies.map(({ title, id }) =>\n                    <li key={id} className={css.item}>\n                        <Link to={`/movies/${id}`} state={{ from: location }}>{title}</Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    )\n};\n\nexport default ListMovies;\n\nListMovies.propTypes = {\n    listMovies: PropTypes.array.isRequired,\n    location: PropTypes.object.isRequired,\n}","import { useEffect, useState } from \"react\";\n\nimport { Api } from \"services/api\";\nimport Notiflix from \"notiflix\";\n// import css from './Home.module.css';\nimport { useLocation } from \"react-router-dom\";\nimport ListMovies from \"components/ListMovies/ListMovies\";\n\n\n\nconst Home = () => {\n    const [listTrendingMovies, setlistTrendingMovies] = useState([]);\n    const location = useLocation();\n    console.log(listTrendingMovies)\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                const getData = await Api.fetchTrendingMovies()\n                // console.log(getData)\n                setlistTrendingMovies(getData)\n            } catch (error) {\n                Notiflix.Notify.warning(error.message);\n            } finally {\n                // setIsVizibleLoadMore(false);\n            }\n        };\n\n        getData();\n    }, [])\n\n    return (\n        <section className=\"section\">\n            <h1>Trending today</h1>\n\n            <ListMovies listMovies={listTrendingMovies} location={location} />\n        </section>\n    );\n};\n\nexport default Home;","import axios from \"axios\";\n\nconst KEYTMDB = \"d3e87ea049b6b9a39016714042d8b78c\"\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEYTMDB}`);\n    if (!response.data.results) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data.results;\n};\n\nconst fetchMovieById = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchMovieQuery = async (value) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEYTMDB}&language=en-US&query=${value}&page=1&include_adult=false`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nexport const Api = { fetchTrendingMovies, fetchMovieById, fetchMovieQuery, fetchCast, fetchReviews };"],"names":["listMovies","location","length","map","title","id","className","css","Link","to","state","from","useState","listTrendingMovies","setlistTrendingMovies","useLocation","console","log","useEffect","Api","getData","Notiflix","message","KEYTMDB","fetchTrendingMovies","axios","response","data","results","Promise","reject","Error","fetchMovieById","fetchMovieQuery","value","fetchCast","fetchReviews"],"sourceRoot":""}