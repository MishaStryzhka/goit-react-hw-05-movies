{"version":3,"file":"static/js/888.a02d8b07.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieDetails_section__3J5A0\",\"btnBack\":\"MovieDetails_btnBack__W4OX5\",\"container\":\"MovieDetails_container__o8VqJ\",\"title\":\"MovieDetails_title__RBndM\",\"containerDescription\":\"MovieDetails_containerDescription__31qDI\"};","import Notiflix from \"notiflix\";\nimport css from \"./MovieDetails.module.css\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Api } from \"services/api\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieById, setMovieById] = useState([])\n    const location = useLocation()\n    const [imgURL, setImgURL] = useState(\"\")\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                const getData = await Api.fetchMovieById(movieId)\n                setMovieById(getData)\n                setImgURL(`https://image.tmdb.org/t/p/w300/${getData.poster_path}`)\n            } catch (error) {\n                Notiflix.Notify.warning(error.message);\n            }\n        };\n\n        getData();\n    }, [movieId])\n\n    if (movieById) {\n        return (\n            <>\n                <div className=\"section\">\n                    {location.state && <Link type=\"button\" className={css.btnBack} to={location.state.from}>Go back</Link>}\n\n                    <div className={css.container}>\n                        <img src={imgURL} alt={movieById.title} />\n                        <div className={css.containerDescription}>\n                            <h2 className={css.title}>{`${movieById.title}(${new Date(movieById.release_date).getUTCFullYear()})`}</h2>\n                            <p>User score: {Math.floor(movieById.vote_average * 10)}%</p>\n                            <h3>Overview</h3>\n                            <p>{movieById.overview}</p>\n                            <h3>Genres</h3>\n                            {movieById.genres && <p>{movieById.genres.map(genre => `${genre.name} `)}</p>}\n                        </div>\n                    </div>\n\n                    <div className={css.containerDescription}>\n                        <h4>Additional information</h4>\n\n                        <ul>\n                            <li><Link type=\"button\" to=\"cast\" state={location.state}>Cast</Link></li>\n                            <li><Link type=\"button\" to=\"reviews\" state={location.state}>Reviews</Link></li>\n                        </ul>\n\n                        <Suspense fallback={<div>Loading page...</div>}>\n                            <Outlet />\n                        </Suspense>\n                    </div>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst KEYTMDB = \"d3e87ea049b6b9a39016714042d8b78c\"\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEYTMDB}`);\n    if (!response.data.results) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data.results;\n};\n\nconst fetchMovieById = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchMovieQuery = async (value) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEYTMDB}&language=en-US&query=${value}&page=1&include_adult=false`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nexport const Api = { fetchTrendingMovies, fetchMovieById, fetchMovieQuery, fetchCast, fetchReviews };"],"names":["movieId","useParams","useState","movieById","setMovieById","location","useLocation","imgURL","setImgURL","useEffect","Api","getData","poster_path","Notiflix","message","className","state","Link","type","css","to","from","src","alt","title","Date","release_date","getUTCFullYear","Math","floor","vote_average","overview","genres","map","genre","name","Suspense","fallback","KEYTMDB","fetchTrendingMovies","axios","response","data","results","Promise","reject","Error","fetchMovieById","id","fetchMovieQuery","value","fetchCast","fetchReviews"],"sourceRoot":""}