{"version":3,"file":"static/js/674.ab915601.chunk.js","mappings":"2NACA,EAAsB,mB,SCetB,EAZc,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAEb,OAAQ,4BACJ,gBAAKC,UAAWC,EAASC,IAAKH,EAAMI,aAAN,0CACWJ,EAAMI,c,k2OAE3CC,IAAKL,EAAMM,QACf,wBAAKN,EAAMM,QACX,uCAAeN,EAAMO,eAE5B,E,6CCsBD,EA9Ba,WACT,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAuBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,6GAE8BC,EAAAA,EAAAA,UAAcN,GAF5C,OAEcO,EAFd,OAKQC,QAAQC,IAAIF,EAAQJ,MACpBC,EAAQG,EAAQJ,MANxB,gDAQQO,IAAAA,OAAAA,QAAwB,KAAMC,SARtC,sGADY,uBAAC,WAAD,wBAeZJ,EACH,GAAE,CAACP,KAGI,8BACHG,EAAKS,KAAI,SAAApB,GAAK,OAAI,SAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMqB,GAAtB,KAEtB,C,8FChCKC,EAAU,mCAEVC,EAAmB,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,kEAAqEF,IADpE,WAClBG,EADkB,QAEVC,KAAKC,QAFK,yCAGbC,QAAQC,OAAO,IAAIC,MAAM,+CAHZ,gCAKjBL,EAASC,KAAKC,SALG,2CAAH,qDAQnBI,EAAc,mCAAG,WAAOV,GAAP,uFACIG,EAAAA,EAAAA,IAAA,6CAAgDH,EAAhD,oBAA8DC,EAA9D,oBADJ,WACbG,EADa,QAGLC,KAHK,yCAIRE,QAAQC,OAAO,IAAIC,MAAM,+CAJjB,gCAMZL,EAASC,MANG,2CAAH,sDASdM,EAAe,mCAAG,WAAOC,GAAP,uFACGT,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,iCAA+FW,EAA/F,gCADH,WACdR,EADc,QAGNC,KAHM,yCAITE,QAAQC,OAAO,IAAIC,MAAM,+CAJhB,gCAMbL,EAASC,MANI,2CAAH,sDASfQ,EAAS,mCAAG,WAAOb,GAAP,uFACSG,EAAAA,EAAAA,IAAA,6CAAgDH,EAAhD,4BAAsEC,EAAtE,oBADT,WACRG,EADQ,QAGAC,KAHA,yCAIHE,QAAQC,OAAO,IAAIC,MAAM,+CAJtB,gCAMPL,EAASC,MANF,2CAAH,sDASTS,EAAY,mCAAG,WAAOd,GAAP,uFACMG,EAAAA,EAAAA,IAAA,6CAAgDH,EAAhD,4BAAsEC,EAAtE,oBADN,WACXG,EADW,QAGHC,KAHG,yCAINE,QAAQC,OAAO,IAAIC,MAAM,+CAJnB,gCAMVL,EAASC,MANC,2CAAH,sDASLZ,EAAM,CAAES,oBAAAA,EAAqBQ,eAAAA,EAAgBC,gBAAAA,EAAiBE,UAAAA,EAAWC,aAAAA,E","sources":["webpack://react-homework-template/./src/components/Actor/Actor.module.css?12e2","components/Actor/Actor.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Actor_img__L5rVY\"};","import noImages from \"../../images/no-image.jpg\";\nimport css from \"./Actor.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Actor = ({ actor }) => {\n\n    return (<div>\n        <img className={css.img} src={actor.profile_path\n            ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n            : noImages}\n            alt={actor.name} />\n        <h5>{actor.name}</h5>\n        <p>Character: {actor.character}</p>\n    </div>)\n};\n\nexport default Actor;\n\nActor.propTypes = {\n    actor: PropTypes.object.isRequired,\n\n}","import Actor from \"components/Actor/Actor\";\nimport Notiflix from \"notiflix\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Api } from \"services/api\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                const getData = await Api.fetchCast(movieId)\n                // setMovieById(getData)\n                // setImgURL(`https://image.tmdb.org/t/p/w300/${getData.cast.profile_path}`)\n                console.log(getData.cast)\n                setCast(getData.cast);\n            } catch (error) {\n                Notiflix.Notify.warning(error.message);\n            } finally {\n                // setIsVizibleLoadMore(false);\n            }\n        };\n\n        getData();\n    }, [movieId])\n\n\n    return (<>\n        {cast.map(actor => <Actor key={actor.id} actor={actor} />)}\n    </>)\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst KEYTMDB = \"d3e87ea049b6b9a39016714042d8b78c\"\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEYTMDB}`);\n    if (!response.data.results) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data.results;\n};\n\nconst fetchMovieById = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchMovieQuery = async (value) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEYTMDB}&language=en-US&query=${value}&page=1&include_adult=false`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nexport const Api = { fetchTrendingMovies, fetchMovieById, fetchMovieQuery, fetchCast, fetchReviews };"],"names":["actor","className","css","src","profile_path","alt","name","character","movieId","useParams","useState","cast","setCast","useEffect","Api","getData","console","log","Notiflix","message","map","id","KEYTMDB","fetchTrendingMovies","axios","response","data","results","Promise","reject","Error","fetchMovieById","fetchMovieQuery","value","fetchCast","fetchReviews"],"sourceRoot":""}