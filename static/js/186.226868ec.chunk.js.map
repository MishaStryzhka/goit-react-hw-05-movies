{"version":3,"file":"static/js/186.226868ec.chunk.js","mappings":"2OAsCA,UAjCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,6GAE8BC,EAAAA,EAAAA,aAAiBN,GAF/C,OAEcO,EAFd,OAIQH,EAAWG,EAAQC,SAJ3B,gDAMQC,IAAAA,OAAAA,QAAwB,KAAMC,SANtC,sGADY,uBAAC,WAAD,wBAaZH,EACH,GAAE,CAACP,IAEJW,QAAQC,IAAIT,IAEJ,+BACJ,wBACKA,EAAQU,KAAI,SAAAC,GAAM,OAAI,2BACnB,qCAAaA,EAAOA,WACpB,uBAAIA,EAAOC,YAFI,OAO9B,C,8FClCKC,EAAU,mCAEVC,EAAmB,mCAAG,oGACDC,EAAAA,EAAAA,IAAA,kEAAqEF,IADpE,WAClBG,EADkB,QAEVC,KAAKZ,QAFK,yCAGba,QAAQC,OAAO,IAAIC,MAAM,+CAHZ,gCAKjBJ,EAASC,KAAKZ,SALG,2CAAH,qDAQnBgB,EAAc,mCAAG,WAAOC,GAAP,uFACIP,EAAAA,EAAAA,IAAA,6CAAgDO,EAAhD,oBAA8DT,EAA9D,oBADJ,WACbG,EADa,QAGLC,KAHK,yCAIRC,QAAQC,OAAO,IAAIC,MAAM,+CAJjB,gCAMZJ,EAASC,MANG,2CAAH,sDASdM,EAAe,mCAAG,WAAOC,GAAP,uFACGT,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,iCAA+FW,EAA/F,gCADH,WACdR,EADc,QAGNC,KAHM,yCAITC,QAAQC,OAAO,IAAIC,MAAM,+CAJhB,gCAMbJ,EAASC,MANI,2CAAH,sDASfQ,EAAS,mCAAG,WAAOH,GAAP,uFACSP,EAAAA,EAAAA,IAAA,6CAAgDO,EAAhD,4BAAsET,EAAtE,oBADT,WACRG,EADQ,QAGAC,KAHA,yCAIHC,QAAQC,OAAO,IAAIC,MAAM,+CAJtB,gCAMPJ,EAASC,MANF,2CAAH,sDASTS,EAAY,mCAAG,WAAOJ,GAAP,uFACMP,EAAAA,EAAAA,IAAA,6CAAgDO,EAAhD,4BAAsET,EAAtE,oBADN,WACXG,EADW,QAGHC,KAHG,yCAINC,QAAQC,OAAO,IAAIC,MAAM,+CAJnB,gCAMVJ,EAASC,MANC,2CAAH,sDASLd,EAAM,CAAEW,oBAAAA,EAAqBO,eAAAA,EAAgBE,gBAAAA,EAAiBE,UAAAA,EAAWC,aAAAA,E","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Api } from \"services/api\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                const getData = await Api.fetchReviews(movieId)\n                // console.log(getData)\n                setReviews(getData.results);\n            } catch (error) {\n                Notiflix.Notify.warning(error.message);\n            } finally {\n                // setIsVizibleLoadMore(false);\n            }\n        };\n\n        getData();\n    }, [movieId])\n\n    console.log(reviews)\n\n    return (<>\n        <ul>\n            {reviews.map(author => <li>\n                <h3>Author: {author.author}</h3>\n                <p>{author.content}</p>\n\n            </li>)}\n        </ul>\n    </>)\n};\n\nexport default Reviews; ","import axios from \"axios\";\n\nconst KEYTMDB = \"d3e87ea049b6b9a39016714042d8b78c\"\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${KEYTMDB}`);\n    if (!response.data.results) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data.results;\n};\n\nconst fetchMovieById = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchMovieQuery = async (value) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEYTMDB}&language=en-US&query=${value}&page=1&include_adult=false`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchCast = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nconst fetchReviews = async (id) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEYTMDB}&language=en-US`);\n    // console.log(response)\n    if (!response.data) {\n        return Promise.reject(new Error(\"Sorry! There is no photo at your request.\"))\n    }\n    return response.data;\n};\n\nexport const Api = { fetchTrendingMovies, fetchMovieById, fetchMovieQuery, fetchCast, fetchReviews };"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","Api","getData","results","Notiflix","message","console","log","map","author","content","KEYTMDB","fetchTrendingMovies","axios","response","data","Promise","reject","Error","fetchMovieById","id","fetchMovieQuery","value","fetchCast","fetchReviews"],"sourceRoot":""}